/* Default values are for when the home page is loaded. */

header {
    position: sticky;
    top: -0.1px; /* This must be less than zero to trigger the intersection */
    background-color: var(--bg);
    border-bottom: 1px solid #0000;
    padding: 2em 0;
    height: 5em;
    z-index: 99;

    margin-bottom: 20vh;

    transition: background-color 1s, border-color 0.3s;
}

header nav {
    grid-column: wide;
    display: flex;
}

header nav a {
    padding: 0.5em;
    text-decoration: underline;
    text-decoration-color: var(--text-extra-light);
}

header.at-top nav a {
    text-decoration: none;
}

@keyframes name-fade {
    0% {
        opacity: 0;
    }

    50% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

header nav a.name {
    /* Manual positioning is icky, but flex acted strange with sticky! */
    position: fixed;
    top: 32px;
    font-size: 14px;
    font-weight: bold;
    text-decoration: none;
    opacity: 0;

    /* Adjust for padding */
    margin-left: -0.5em;

    /* This way the name truncates to just 'Parker' when the viewport is small
       enough. */
    max-width: 32vw;
    max-height: 1.8em;
    overflow: hidden;
}

header.at-top nav a.name {
    animation: name-fade 0.6s ease-in-out;
    opacity: 1;
}

header nav .tabs {
    display: flex;
    flex-basis: 700px;
    font-size: 16px;
    justify-content: space-evenly;
    z-index: 99;
    transition: flex-basis 0.3s, font-size 0.3s;
    transform: translate3d(0,0,0); 
    /* Might help some animation performance on iOS... unclear */
}

span[class^='flex-span'] {
    flex-grow: 1;
    /* transition: flex-grow 450ms;
    transition-timing-function: cubic-bezier(0.64, -0.435, 0.385, 1.25);
    will-change: flex-grow; */
}

header .flex-span-right {
    /* Using max-width transitions instead of flex-grow transitions. */
    max-width: 700px;
    transition: max-width 450ms;
    will-change: max-width;
}

header.at-top .flex-span-right {
    max-width: 0px;
}

header.at-top {
    border-color: #0001;
    height: 5em;
}

header.at-top .tabs {
    flex-basis: 0px;
    font-size: 14px;
    /* Adjust for padding */
    margin-right: -0.5em;
}

/* === To-top and Dark-mode buttons ========================================= */

input#dark-mode, input#dark-mode + label, input#to-top, input#to-top + label {
    position: fixed;
    bottom: 1em;
    right: 1em;
    background-color: var(--bg);
    border: 1px solid #8884;
    border-radius: 1em;
    height: 1.5em;
    width: 2.2em;
    text-align: center;
    line-height: 1.2em;
    cursor: pointer;
    z-index: 999;
}
input#dark-mode, input#to-top {
    visibility: hidden;
}
input#dark-mode + label::before {
    content: '🌒︎';
}
input#dark-mode:checked + label::before {
    content: '☀️';
}

input#to-top, input#to-top + label {
    bottom: 2.6em;
    transform: scale(-1,1);
}

/* === Old ================================================================== */

/* header {
    position: absolute;
}

header input {
    display: none;
}

header a {
    color: var(--text-color-alt);
    fill: #808090;
    padding: 0.5em;
    margin-left: -0.5em;
    border: none;
    display: block;
}
header > a {
    font-weight: bold;
    margin-top: -0.5em;
}

nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

nav .social {
    max-width: 8em;
    display: flex;
    justify-content: space-between;
}

nav .social li a svg {
    --size: 1.1em;
    height: var(--size);
    width: var(--size);
} */

/* === Smaller Viewports ==================================================== */

/* @media only screen and (max-width: 940px) {

    header {
        top: 0;
        padding: 1em 0;
        width: 100%;
        z-index: 99;
        margin: 0 calc(-1 * var(--side-margin));
        background-color: var(--page-background-alt);
        background-color: var(--page-background);
        border-bottom: 1px solid var(--narrow-light-grey);
    }
    nav {
        padding: 0 1em;
        max-height: 0em;
        transition: max-height 300ms;
        overflow: hidden;
        text-align: center;
    }
    nav ul {
        margin: auto;
        margin-top: 2em;
    }
    header > a {
        padding: 1rem;
        display: inline;
    }
    header label {
        position: absolute;
        right: 1rem;
        top: 0;
        padding: 1rem 1rem 2rem 3rem;
        font-size: 1.2em;
    }
    header label::after {
        content: '\2630';
    }
    header input:checked + label::after {
        content: '\2715';
    }
    header input:checked ~ nav {
        max-height: 20em;
        height: max-content;
    }
    header input:checked ~ nav ul li {
        display: block;
    }
} */
